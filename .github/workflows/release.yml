name: "release"

on:
  push:
    branches: [ main ]

jobs:
  packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get_package_list.outputs.packages }}
    steps:
      - name: "checkout"
        uses: actions/checkout@v4

      - name: "get package list"
        id: get_package_list
        uses: ./.github/actions/get_package_list

  build_packages:
    needs: packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.packages.outputs.packages) }}
        arch: [amd64]
    steps:
      - name: "checkout"
        uses: actions/checkout@v4

      - name: "get package version"
        id: get_version
        uses: ./.github/actions/get_package_version
        with:
          package: ${{ matrix.package }}
      
      - name: "package ${{ matrix.package }} for ${{ matrix.arch }}"
        run: |
          ./main.sh dist --package ${{ matrix.package }} --version ${{ steps.get_version.outputs.version }} --arch ${{ matrix.arch }}

      - name: "upload ${{ matrix.package }} for ${{ matrix.arch }}"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ matrix.arch }}.tar.gz
          path: packages/${{ matrix.package }}/*.tar.gz
  
  create_release:
    needs: build_packages
    runs-on: ubuntu-latest
    steps:
      - name: "download all artifacts"
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: "generate release tag"
        id: tag
        run: |
          TAG_NAME="release-$(date +'%Y%m%d-%H%M%S')"
          echo "TAG=${TAG_NAME}" >> $GITHUB_ENV
        shell: bash

      - name: "create release"
        uses: ncipollo/release-action@v1
        with:
          artifacts: artifacts/**
          body: "Static compiled packages"
          name: ${{ env.TAG }}
          tag: ${{ env.TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}